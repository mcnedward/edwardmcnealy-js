{"version":3,"sources":["app.js","colorZones/colorPicker.js","colorZones/renderer.js","colorZones/timeZoneService.js","colorZones/tooltipService.js","parser/parserDirectory.js","parser/parserFile.js","colorZones/models/latLng.js","colorZones/models/polygon.js","colorZones/models/timeZone.js","appController.js","blackjack/blackjackController.js","blackjack/blackjackService.js","blackjack/playerService.js","blackjack/playingCardDirective.js","colorZones/colorZonesController.js","colorZones/colorZonesViewModel.js","core/contactController.js","ii/iiController.js","parser/directoryDirective.js","parser/fileUploadDirective.js","parser/parserController.js","parser/parserService.js","parser/structureDirective.js","numberPrinter/numberPrinterController.js","services/modalService.js","services/recaptchaService.js","services/userService.js","utils/buttonOptionsDirective.js"],"names":["ColorPicker","self","this","hours","minutes","seconds","red","green","blue","colors","ko","observable","class","interval","hoursColor","minutesColor","secondsColor","update","intervalName","color","originalColorKey","key","hasOwnProperty","overriden","temp","Renderer","render","stopRendering","requestAnimationFrame","clear","drawImageBackground","renderFunction","e","imageBackground","centerX","canvas","width","centerY","height","context","beginPath","drawImage","closePath","clearRect","convertHex","hex","alpha","r","parseInt","slice","g","b","a","$","getContext","matrix","transformApplied","loadImage","url","undefined","Image","onload","translate","src","ellipse","x","y","Math","PI","fillStyle","fill","polygon","points","polygonPoints","firstPoint","separatePoints","i","length","point","moveTo","splice","lineTo","text","centerText","font","metrics","measureText","fillText","_mouseOverEvent","_centerLat","_centerLng","addMouseOverEvent","mouseOverEvent","centerLat","centerLng","addEventListener","event","rect","getBoundingClientRect","clientX","left","clientY","top","_scrollCallback","addMouseScrollEvent","callback","wheel","wheelDelta","TimeZoneService","mapWidth","getXY","lat","lng","mercX","mercY","toRadians","mercUnits","pow","_zoom","tan","c","log","degrees","_timeZonesObservable","_timeZoneRegionsObservable","_errorCallback","setup","zoom","loadTimeZones","errorCallback","timeZonesObservable","timeZoneRegionsObservable","loadBoundingBoxes","fetch","then","response","ok","json","boundingBoxes","JSON","parse","box","j","matchesId","name","xyMin","boundingBox","ymin","xmin","xyMax","ymax","xmax","loadZonePolygons","timeZone","zoneName","replace","data","polygons","polygonData","coords","coord","xy","push","concat","Polygon","centroid","centroidName","maxPoints","each","index","value","centroidPolygon","getTimeZone","hoverRegion","region","pointPair","TimeZone","hoverRegions","reloadCoordinates","TooltipService","tooltips","showTooltip","id","tooltip","setTimeout","localStorage","setItem","storageKey","timeout","loadToolips","tooltipsShown","getItem","ParserDirectory","directories","files","ParserFile","LatLng","pureComputed","idToMatch","app","angular","module","config","$stateProvider","$urlRouterProvider","$httpProvider","$locationProvider","state","templateUrl","controller","title","otherwise","when","$state","$match","go","html5Mode","$rootScope","$timeout","$location","$anchorScroll","adjustScroll","animate","scrollTop","offset","inRoot","appTitle","$on","toState","toParams","fromState","fromParams","$broadcast","useContainerFluid","useContainer","ga","fadeOut","$scope","$window","blackjackService","playerService","updateUsers","save","player","getPlayer","dealer","getDealer","saveUsers","toggleOptions","optionsOn","show","hide","stopBets","args","user","type","message","userWon","flipCards","card","attr","addClass","append","dealCards","css","resetUsers","hit21","hitMe","stay","addChip","amount","money","bet","clearBet","service","createCard","suit","srcName","substring","toLowerCase","isFaceDown","createCards","cards","suits","dealCard","faceDown","addCard","indexOf","shuffle","cardsCopy","cardsCount","floor","random","handValue","table","find","updateUser","users","stringify","initUsers","clearHand","getSavedUsers","savedUsers","selector","chips","getChips","wins","loses","chip5s","chip10s","chip25s","chip100s","chip500s","adjustForAces","updateUserHandValue","userType","directive","scope","restrict","link","element","attrs","template","document","ready","renderer","timeZoneService","colorPicker","model","ColorZonesViewModel","options","useOnlyNativeEvents","applyBindings","tooltipService","loadMap","mapCallback","_mapCallback","mapUrl","console","error","adjustTime","toString","getColorInterval","warn","rayCastTest","rayTest","lastPoint","slope","testPoint","_hoverTimeZoneKey","_hoverRegionKey","_selectedZoneInfo","_mouseX","_mouseY","hoverZoneColor","timeFormat","opacity","showTimes","colorAllZones","timeZones","observableArray","timeZoneRegions","_textColor","timeTexts","current","moment","tz","zoneInfo","textX","textY","time","format","colorHex","hoverTimeZone","hoverColor","errorMessage","zone","regions","contactSuccessMessage","contactErrorMessage","showError","contactInfo","isFormSubmitted","submitContact","form","$setSubmitted","$invalid","$setPristine","$setUntouched","reCaptchaError","grecaptcha","secretResponse","recaptchaResponse","method","headers","Accept","Content-Type","body","$apply","email","subject","checkLength","emailMaxLength","subjectMaxLength","messageMaxLength","subjectLength","messageLength","modalService","clearAppError","showAppError","appError","clearLibError","showLibError","libError","iiInfo","openDownloadForApp","showModal","openDownloadForLib","downloadIIApp","iiAppInfo","isAppFormSubmitted","downloadUrl","window","location","href","downloadIILib","iiLibInfo","isLibFormSubmitted","transclude","classes","selectClass","directoryId","classId","isRealDirectory","showContents","checkProgress","defaultDragAreaMessage","dragAreaMessage","dragoverClass","uploadProgress","handleError","fileSelected","hasError","load","dragAreaError","loading","isLoading","bind","stopPropagation","preventDefault","originalEvent","dataTransfer","dropEffect","handleDirectory","item","directory","topDirectory","reader","createReader","Promise","resolve","iterationAttempts","readDirectory","readEntries","entries","all","map","entry","isFile","newDirectory","file","parentDirectory","uploadFiles","newFile","fileId","result","onError","handleFiles","items","webkitItems","webkitGetAsEntry","notifyDirectoryDone","filesDropped","parserService","recaptchaService","errorHandler","errors","parsingComplete","token","uploadResponse","uploadDirectory","fileIds","parseFiles","directoryResponse","saveDirectory","isParsingComplete","classObject","findFirstFileInDirectory","styleLineNumbers","errorParsingMessage","searchDirectory","searchClassesInDirectory","childDirectory","pre","empty","codeTag","classContent","preLength","innerHTML","num","split","lineNumberElement","getElementsByTagName","number","appendTo","test","navigator","userAgent","uploadInfo","fileUploadMessage","change","fileName","uploadFile","verify","selectClassObject","classObjects","cObject","fileNames","isSelected","moveToLine","content","lineNumber","removeClass","getDirectory","$http","formData","FormData","forEach","getUploadProgress","responseFunction","saveClasses","getClasses","contents","$element","convert","clearText","catch","convertToEnglish","englishWord","convertToRomanNumeral","romanNumeral","factory","removeModal","hasPerspective","classie","remove","modal","removeModalHandler","overlay","close","modalId","querySelector","add","removeEventListener","ev","closeModal","isOpen","successCallback","userService","clearCache","removeItem","savedUser","isLoggedIn","getAuthToken","isAdmin","getUser","userRoles","authToken","confirmAction","cancelAction","confirm","cancel","confirmTitle","cancelTitle","confirmClass","which","$eval","ngEnter"],"mappings":"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","file":"../js/app.min.js","sourcesContent":["'use strict';\n\nvar app = angular.module('mcnedward', ['ui.router', 'ui.bootstrap', 'ngAnimate', 'vcRecaptcha']).config(['$stateProvider', '$urlRouterProvider', '$httpProvider', '$locationProvider', function ($stateProvider, $urlRouterProvider, $httpProvider, $locationProvider) {\n\t'use strict';\n\n\t$stateProvider.state('app', {\n\t\turl: '/',\n\t\ttemplateUrl: 'core/home.html',\n\t\tcontroller: 'ContactCtrl',\n\t\ttitle: 'Edward McNealy'\n\t}).state('ii', {\n\t\turl: '/inheritance-inquiry/',\n\t\ttemplateUrl: 'ii/ii.html',\n\t\tcontroller: 'IICtrl',\n\t\ttitle: 'Inheritance Inquiry'\n\t}).state('parser', {\n\t\turl: '/parser/',\n\t\ttemplateUrl: 'parser/parser.html',\n\t\tcontroller: 'ParserCtrl',\n\t\ttitle: 'Parser'\n\t}).state('colorZones', {\n\t\turl: '/color-zones/',\n\t\ttemplateUrl: 'colorZones/colorZones.html',\n\t\tcontroller: 'ColorZonesCtrl',\n\t\ttitle: 'Color Zones'\n\t}).state('bramble', {\n\t\turl: '/bramble/',\n\t\ttemplateUrl: 'bramble/bramble.html',\n\t\ttitle: 'Bramble'\n\t}).state('keepfit', {\n\t\turl: '/keepfit/',\n\t\ttemplateUrl: 'keepfit/keepfit.html',\n\t\ttitle: 'KeepFit'\n\t}).state('blackjack', {\n\t\turl: '/blackjack/',\n\t\ttemplateUrl: 'blackjack/blackjack.html',\n\t\tcontroller: 'BlackjackCtrl',\n\t\ttitle: 'Blackjack'\n\t}).state('numberPrinter', {\n\t\turl: '/numberprinter/',\n\t\ttemplateUrl: 'numberPrinter/numberPrinter.html',\n\t\tcontroller: 'NumberPrinterCtrl',\n\t\ttitle: 'Number Printer'\n\t});\n\n\t$urlRouterProvider.otherwise('/');\n\t$urlRouterProvider.when(/ii/, ['$state', '$match', function ($state, $match) {\n\t\t$state.go('ii');\n\t}]);\n\n\t$locationProvider.html5Mode(true);\n}]);","'use strict';\n\nfunction ColorPicker() {\n  var self = this;\n\n  self.hours = 'hours';\n  self.minutes = 'minutes';\n  self.seconds = 'seconds';\n  self.red = 'red';\n  self.green = 'green';\n  self.blue = 'blue';\n  self.colors = ko.observable({\n    red: {\n      class: 'btn-danger',\n      interval: self.hours\n    },\n    green: {\n      class: 'btn-success',\n      interval: self.minutes\n    },\n    blue: {\n      class: 'btn-primary',\n      interval: self.seconds\n    }\n  });\n  self.hoursColor = ko.observable(self.colors().red.class);\n  self.minutesColor = ko.observable(self.colors().green.class);\n  self.secondsColor = ko.observable(self.colors().blue.class);\n\n  self.update = function (intervalName, color) {\n    // Update the selected interval observable property (self.hours, self.minutes, self.seconds) and color\n    self[intervalName + 'Color'](self.colors()[color].class);\n\n    // Get the original interval's color key\n    var originalColorKey;\n    for (var key in self.colors()) {\n      if (!self.colors().hasOwnProperty(key)) continue;\n\n      if (self.colors()[key].interval === intervalName) {\n        originalColorKey = key;\n        break;\n      }\n    }\n\n    var overriden = self.colors()[color];\n    self[overriden.interval + 'Color'](self.colors()[originalColorKey].class);\n\n    var temp = self.colors()[color].interval;\n    self.colors()[color].interval = intervalName;\n    self.colors()[originalColorKey].interval = temp;\n  };\n}","'use strict';\n\nfunction Renderer() {\n  var self = this;\n\n  var width = 1200,\n      height = 700;\n  var canvas = $('#theCanvas')[0];\n  var context = canvas.getContext('2d');\n  var imageBackground;\n  var matrix = [1, 0, 0, 1, 0, 0];\n  var transformApplied = false;\n\n  // TODO Make color a property here (observable?)\n  // Then I can just set the color before calling a drawing function\n\n  self.renderFunction = ko.observable();\n  self.stopRendering = ko.observable(false);\n\n  function render() {\n    if (self.stopRendering()) return;\n    try {\n      requestAnimationFrame(render);\n\n      // Clear the canvas each frame\n      clear();\n      drawImageBackground();\n\n      if (self.renderFunction()) self.renderFunction()();\n    } catch (e) {\n      // Swallowing exeptions till I figure a better way to report them\n    }\n  }\n  render();\n\n  // Loads a url into an image then draws that image to the canvas\n  self.loadImage = function (url) {\n    if (imageBackground === undefined) imageBackground = new Image();\n    imageBackground.onload = function () {\n      // Normally, 0,0 would be the top left of the canvas.\n      // I need to translate the canvas and the map image so that the center of the canvas is 0,0\n      var centerX = canvas.width / 2;\n      var centerY = canvas.height / 2;\n      if (!transformApplied) {\n        // Save the translate in the matrix\n        matrix[4] += matrix[0] * centerX + matrix[2] * centerY;\n        matrix[5] += matrix[1] * centerX + matrix[3] * centerY;\n        context.translate(centerX, centerY);\n        transformApplied = true;\n      }\n      context.drawImage(imageBackground, centerX * -1, centerY * -1, width, height);\n    };\n    imageBackground.src = url;\n  };\n\n  function drawImageBackground() {\n    if (!imageBackground) return;\n    var centerX = canvas.width / 2;\n    var centerY = canvas.height / 2;\n    context.beginPath();\n    context.drawImage(imageBackground, centerX * -1, centerY * -1, width, height);\n    context.closePath();\n  }\n\n  self.ellipse = function (x, y, width, height, color) {\n    color = convertHex(color, 100);\n    context.beginPath();\n    // Ellipse: void context.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise);\n    context.ellipse(x, y, width / 2, height / 2, 0, 2 * Math.PI, false);\n    context.fillStyle = color;\n    context.fill();\n  };\n\n  self.polygon = function (points, color, alpha) {\n    var polygonPoints = points.slice(0); // Need a copy of the points here\n    context.beginPath();\n    color = convertHex(color, alpha);\n    context.fillStyle = color;\n\n    var firstPoint = polygonPoints[0];\n    var separatePoints = [];\n    for (var i = 0; i < polygonPoints.length; i++) {\n      var point = polygonPoints[i];\n      if (i === 0) {\n        context.moveTo(point.x, point.y);\n      } else {\n        if (point.x === firstPoint.x && point.y === firstPoint.y && i < polygonPoints.length - 1) {\n          // Need to create a separate polygon for these points\n          separatePoints = polygonPoints.splice(i + 1, polygonPoints.length - i);\n        }\n        context.lineTo(point.x, point.y);\n      }\n    }\n\n    context.fill();\n    context.closePath();\n\n    if (separatePoints.length > 0) self.polygon(separatePoints, color);\n  };\n\n  self.text = function (x, y, text, color, centerText) {\n    context.font = 'bold 16px Segoe UI';\n    context.fillStyle = color;\n    if (centerText) {\n      var metrics = context.measureText(text);\n      x -= metrics.width / 2;\n    }\n    context.fillText(text, x, y);\n  };\n\n  function clear() {\n    context.clearRect(0 - canvas.width / 2, 0 - canvas.height / 2, canvas.width, canvas.height);\n  }\n\n  self.width = function () {\n    return width;\n  };\n\n  self.height = function () {\n    return height;\n  };\n\n  var _mouseOverEvent, _centerLat, _centerLng;\n  self.addMouseOverEvent = function (mouseOverEvent, centerLat, centerLng) {\n    _mouseOverEvent = mouseOverEvent;\n    _centerLat = centerLat;\n    _centerLng = centerLng;\n    canvas.addEventListener('mousemove', function (event) {\n      var rect = canvas.getBoundingClientRect();\n\n      // The canvas uses the center as its (0, 0) point\n      var centerX = canvas.width / 2;\n      var centerY = canvas.height / 2;\n\n      var x = event.clientX - rect.left - centerX;\n      var y = event.clientY - rect.top - centerY;\n      _mouseOverEvent(x, y);\n    }, false);\n  };\n\n  var _scrollCallback;\n  self.addMouseScrollEvent = function (callback) {\n    _scrollCallback = callback;\n    canvas.addEventListener('mousewheel', function () {\n      var wheel = event.wheelDelta / 120;\n      _scrollCallback(1 + wheel / 2);\n    }, false);\n  };\n\n  function convertHex(hex, alpha) {\n    var r = parseInt(hex.slice(1, 3), 16);\n    var g = parseInt(hex.slice(3, 5), 16);\n    var b = parseInt(hex.slice(5, 7), 16);\n    var a = parseInt(alpha, 16) / 255;\n    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';\n  }\n}","'use strict';\n\nfunction TimeZoneService(mapWidth) {\n  var self = this;\n\n  var mercUnits = mapWidth / 4;\n\n  // This is an observable that the caller passes in\n  // It will be updated as the service finishes each of it's requests\n  var _timeZonesObservable;\n  var _timeZoneRegionsObservable;\n  var _centerLat;\n  var _centerLng;\n  var _zoom;\n  var _errorCallback;\n\n  // These need to be observables from ColorZones\n  self.setup = function (centerLat, centerLng, zoom) {\n    _centerLat = centerLat;\n    _centerLng = centerLng;\n    _zoom = zoom;\n  };\n\n  self.loadTimeZones = function (errorCallback, timeZonesObservable, timeZoneRegionsObservable) {\n    _errorCallback = errorCallback;\n    if (_centerLat === undefined || _centerLng === undefined || _zoom === undefined) {\n      _errorCallback('You need to call TimeZoneService.setCenterCoordinates(centerLat, centerLng, zoom) first!');\n      return;\n    }\n    _timeZonesObservable = timeZonesObservable;\n    _timeZoneRegionsObservable = timeZoneRegionsObservable;\n\n    // Load the time zone regions\n    fetch('/api/color-zones/hover-regions').then(function (response) {\n      if (!response.ok) {\n        _errorCallback('Something went wrong trying to load the time zone regions...');\n        return;\n      }\n      response.json().then(function (json) {\n        var hoverRegions = JSON.parse(json);\n\n        function getTimeZone(hoverRegion) {\n          // Each hover region contains a hover region array of points\n          var coords = [];\n          for (var i = 0; i < hoverRegion.hoverRegion.length; i++) {\n            // Every two points in the hover region are the lat and lng\n            var region = hoverRegion.hoverRegion[i];\n            for (var j = 0; j < region.points.length; j += 2) {\n              var pointPair = region.points.slice(j, j + 2);\n              var xy = getXY(pointPair[0], pointPair[1]);\n              coords.push(xy);\n            }\n          }\n          return new TimeZone(hoverRegion.name, coords);\n        }\n\n        for (var i = 0; i < hoverRegions.length; i++) {\n          var timeZone = getTimeZone(hoverRegions[i]);\n          loadZonePolygons(timeZone);\n          _timeZonesObservable().push(timeZone);\n        }\n\n        // All time zones are loaded, so we can now load the bounding boxes\n        loadBoundingBoxes();\n      });\n    });\n\n    self.reloadCoordinates = function () {\n      for (var i = 0; i < _timeZonesObservable().length; i++) {\n        var coords = _timeZonesObservable()[i].coords;\n        for (var j = 0; j < coords.length; j++) {\n          coords[j] = getXY(coords[j].x, coords[j].y);\n        }\n      }\n    };\n\n    // Load the bounding boxes\n    function loadBoundingBoxes() {\n      fetch('/api/color-zones/map-bounds').then(function (response) {\n        if (!response.ok) {\n          // TODO Handle error here\n          return;\n        }\n        response.json().then(function (json) {\n          var boundingBoxes = JSON.parse(json);\n          for (var i = 0; i < boundingBoxes.length; i++) {\n            var box = boundingBoxes[i];\n            for (var j = 0; j < _timeZonesObservable().length; j++) {\n              if (_timeZonesObservable()[j].matchesId(box.name)) {\n                var xyMin = getXY(box.boundingBox.ymin, box.boundingBox.xmin);\n                var xyMax = getXY(box.boundingBox.ymax, box.boundingBox.xmax);\n                _timeZonesObservable()[j].boundingBox = {\n                  xyMin: xyMin,\n                  xyMax: xyMax\n                };\n                break;\n              }\n            }\n          }\n        });\n      });\n    }\n\n    // Load the polygons for a time zone\n    function loadZonePolygons(timeZone) {\n      var zoneName = timeZone.name.replace(/\\/|_/g, '-');\n      fetch('/api/color-zones/polygons/' + zoneName).then(function (response) {\n        if (!response.ok) {\n          _errorCallback('Something went wrong trying to load the time zone polygons for ' + zoneName + '...');\n          return;\n        }\n        response.json().then(function (json) {\n          var data = JSON.parse(json);\n          var polygons = {};\n\n          for (var i = 0; i < data.polygons.length; i++) {\n            // Loop through all the points in the polygon\n            // Every 2 points are a lat & lng pair\n            var polygonData = data.polygons[i];\n            var coords = [];\n\n            for (var j = 0; j < polygonData.points.length; j += 2) {\n              var coord = polygonData.points.slice(j, j + 2);\n              var xy = getXY(coord[0], coord[1]);\n              coords.push(xy);\n            }\n\n            // Check if the polygon has already been created\n            var polygon = polygons[polygonData.name];\n            if (polygon) {\n              polygon.coords = polygon.coords.concat(coords);\n            } else {\n              polygon = new Polygon(polygonData.name, coords, getXY(polygonData.centroid[1], polygonData.centroid[0]));\n              polygons[polygonData.name] = polygon;\n            }\n          }\n\n          // Check to each polygon to find the largest by seeing if it has the most edges\n          // Use the largest polygon's centroid as the timezone centroid\n          var centroidName,\n              maxPoints = 0;\n          $.each(polygons, function (index, value) {\n            if (value.coords.length > maxPoints) {\n              maxPoints = value.coords.length;\n              centroidName = value.name;\n            }\n          });\n\n          if (!_timeZoneRegionsObservable()[timeZone.name]) {\n            _timeZoneRegionsObservable()[timeZone.name] = [];\n          }\n          _timeZoneRegionsObservable()[timeZone.name] = polygons;\n          timeZone.centroidPolygon = polygons[centroidName];\n        });\n      });\n    }\n  };\n\n  function getXY(lat, lng) {\n    var centerX = mercX(_centerLng());\n    var centerY = mercY(_centerLat());\n    var x = mercX(lng) - centerX;\n    var y = mercY(lat) - centerY;\n    return { x: x, y: y };\n  }\n\n  function mercX(lng) {\n    lng = toRadians(lng);\n    var a = mercUnits / Math.PI * Math.pow(2, _zoom());\n    var b = lng + Math.PI;\n    return a * b;\n  }\n\n  function mercY(lat) {\n    lat = toRadians(lat);\n    var a = mercUnits / Math.PI * Math.pow(2, _zoom());\n    var b = Math.tan(Math.PI / 4 + lat / 2);\n    var c = Math.PI - Math.log(b);\n    return a * c;\n  }\n\n  function toRadians(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n}","'use strict';\n\nfunction TooltipService(tooltips) {\n  var self = this;\n\n  var storageKey = 'tooltipsShown';\n\n  self.loadToolips = function () {\n    var tooltipsShown = localStorage.getItem(storageKey);\n    if (tooltips.length === 0 || tooltipsShown) return;\n    showTooltip(0);\n  };\n\n  function showTooltip(index) {\n    if (index === tooltips.length) return;\n    try {\n      tooltips[index].id.tooltip('show');\n    } catch (e) {}\n\n    setTimeout(function () {\n      try {\n        tooltips[index].id.tooltip('dispose');\n      } catch (e) {}\n      // Increment the index to try to get the next tooltip\n      index++;\n      if (!tooltips[index]) {\n        // Don't show the tooltips again\n        localStorage.setItem(storageKey, true);\n      }\n      showTooltip(index);\n    }, tooltips[index].timeout * 1000);\n  }\n}","\"use strict\";\n\nfunction ParserDirectory(name, directories, files) {\n\tvar self = this;\n\tself.name = name ? name : null;\n\tself.directories = directories ? directories : [];\n\tself.files = files ? files : [];\n}","\"use strict\";\n\nfunction ParserFile(id, name) {\n\tvar self = this;\n\tself.id = id ? id : 0;\n\tself.name = name ? name : null;\n}","\"use strict\";\n\nfunction LatLng(lat, lng) {\n  var self = this;\n  self.lat = lat;\n  self.lng = lng;\n}","'use strict';\n\nfunction Polygon(name, coords, centroid) {\n  var self = this;\n\n  self.name = name;\n  self.coords = coords;\n  self.centroid = centroid;\n\n  self.id = ko.pureComputed(function () {\n    return self.name.replace(/\\/|_/g, '-');\n  });\n}","'use strict';\n\nfunction TimeZone(name, coords) {\n  var self = this;\n\n  self.name = name;\n  self.coords = coords;\n  self.polygons = undefined;\n  self.centroidPolygon = undefined;\n  self.boundingBox = undefined;\n\n  self.matchesId = function (idToMatch) {\n    return self.id() === idToMatch.replace(/\\/|_/g, '-');\n  };\n\n  self.id = ko.pureComputed(function () {\n    return self.name.replace(/\\/|_/g, '-');\n  });\n}","'use strict';\n\nangular.module('mcnedward').controller('AppCtrl', ['$rootScope', '$state', '$timeout', '$location', '$anchorScroll', function AppCtrl($rootScope, $state, $timeout, $location, $anchorScroll) {\n  'use strict';\n\n  $rootScope.inRoot = true;\n  $rootScope.appTitle = \"Edward McNealy\";\n\n  $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {\n    $rootScope.appTitle = toState.title && toState.title !== '' ? toState.title : 'Edward McNealy';\n    if (fromState.name === 'app') {\n      // Scroll up to the top when going away from the main app\n      adjustScroll('scrollhere');\n    } else {\n      adjustScroll(fromState.name);\n    }\n    if (fromState.name === 'colorZones') {\n      // The color zones need to stop rendering since we're no longer on that page\n      $rootScope.$broadcast('stopRendering');\n    }\n\n    $rootScope.inRoot = toState.name === 'app' || toState.name === '';\n    $rootScope.useContainerFluid = toState.name == 'colorZones' || toState.name == 'parser';\n    $rootScope.useContainer = !$rootScope.inRoot && !$rootScope.useContainerFluid;\n\n    // Update Google Analytics\n    ga('set', 'page', toState.name === 'app' ? '/index.html' : toState.url + '.html');\n    ga('send', 'pageview');\n  });\n\n  $('#loader').fadeOut(200);\n\n  function adjustScroll(id) {\n    if (!id || id === '') return;\n    $timeout(function () {\n      $('html, body').animate({\n        scrollTop: $('#' + id).offset().top + 2\n      }, 1);\n    });\n  }\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 11/8/2014.\r\n */\nangular.module('mcnedward').controller('BlackjackCtrl', ['$rootScope', '$scope', '$window', 'blackjackService', 'playerService', function BlackjackCtrl($rootScope, $scope, $window, blackjackService, playerService) {\n\t'use strict';\n\n\t$scope.player = playerService.getPlayer();\n\t$scope.dealer = playerService.getDealer();\n\n\t$rootScope.$on('busted', function (event, args) {\n\t\tvar user = args;\n\t\tif (user.type == 'player') {\n\t\t\t$scope.message = 'You busted...';\n\t\t\tplayerService.userWon('dealer');\n\t\t}\n\t\tif (user.type == 'dealer') {\n\t\t\t$scope.message = 'Dealer busted! You win!';\n\t\t\tplayerService.userWon('player');\n\t\t}\n\t\tblackjackService.flipCards();\n\t\tupdateUsers(true);\n\t\ttoggleOptions(false);\n\t});\n\t$rootScope.$on('dealerWon', function () {\n\t\t$scope.message = 'Dealer wins...';\n\t\tplayerService.userWon('dealer');\n\t\tupdateUsers(true);\n\t\ttoggleOptions(false);\n\t});\n\t$rootScope.$on('playerWon', function () {\n\t\t$scope.message = 'You win!';\n\t\tplayerService.userWon('player');\n\t\tupdateUsers(true);\n\t\ttoggleOptions(false);\n\t});\n\t$rootScope.$on('push', function () {\n\t\t$scope.message = 'Push.';\n\t\tupdateUsers(true);\n\t\ttoggleOptions(false);\n\t});\n\t$rootScope.$on('21', function (event, args) {\n\t\tvar user = args;\n\t\tif (user.type == 'player') {\n\t\t\t$scope.message = 'You got 21! You win!';\n\t\t\tplayerService.userWon('player');\n\t\t}\n\t\tif (user.type == 'dealer') {\n\t\t\t$scope.message = 'Dealer got 21...';\n\t\t\tplayerService.userWon('dealer');\n\t\t}\n\t\tblackjackService.flipCards();\n\t\tupdateUsers(true);\n\t\ttoggleOptions(false);\n\t});\n\n\tfor (var x = 0; x < 3; x++) {\n\t\tvar card = $('<img>');\n\t\tif (x == 2) {\n\t\t\tcard.attr('src', 'img/blackjack/card/b2fv.png');\n\t\t\tcard.attr('id', 'startCard');\n\t\t\tcard.addClass('card-img');\n\t\t} else {\n\t\t\tcard.attr('src', 'img/blackjack/card/b2pl.png');\n\t\t\tcard.addClass('card-img');\n\t\t}\n\t\t$('#startCards').append(card);\n\t}\n\n\t$scope.dealCards = function () {\n\t\t$scope.message = '';\n\t\t// Remove hidden placeholder cards\n\t\t$('.empty-card').css('display', 'none');\n\t\tplayerService.resetUsers();\n\t\t// Reset hit21 every time new deck is dealt\n\t\t$rootScope.hit21 = false;\n\t\tblackjackService.dealCards();\n\t\tif (!$rootScope.hit21) {\n\t\t\tupdateUsers();\n\t\t\ttoggleOptions(true);\n\t\t}\n\t};\n\n\t// Scope functions\n\t$scope.hitMe = function () {\n\t\tblackjackService.hitMe($scope.player);\n\t\tupdateUsers();\n\t};\n\t$scope.stay = function () {\n\t\tblackjackService.stay();\n\t\tupdateUsers();\n\t};\n\t$scope.addChip = function (amount) {\n\t\t$scope.message = '';\n\t\tif ($scope.stopBets) {\n\t\t\t$scope.message = 'You can\"t place any more bets now!';\n\t\t\treturn;\n\t\t}\n\t\tif ($scope.player.money < $scope.player.bet + amount) {\n\t\t\t$scope.message = 'You don\"t have the money to place that bet!';\n\t\t\treturn;\n\t\t}\n\t\tplayerService.addChip(amount);\n\t\tupdateUsers();\n\t};\n\t$scope.clearBet = function () {\n\t\t$scope.message = '';\n\t\tif ($scope.stopBets) {\n\t\t\tif ($scope.player.bet > 0) $scope.message = 'You can\"t back out now!';\n\t\t\treturn;\n\t\t}\n\t\tplayerService.clearBet();\n\t};\n\n\tfunction updateUsers(save) {\n\t\t$scope.player = playerService.getPlayer();\n\t\t$scope.dealer = playerService.getDealer();\n\t\tif (save) {\n\t\t\tsaveUsers();\n\t\t}\n\t}\n\tfunction saveUsers() {\n\t\tplayerService.updateUsers([$scope.player, $scope.dealer]);\n\t}\n\n\tfunction toggleOptions(optionsOn) {\n\t\tif (optionsOn) {\n\t\t\t$('#options').show();\n\t\t\t$('#startCards').hide();\n\t\t\t// Disable bets\n\t\t\t$scope.stopBets = true;\n\t\t} else {\n\t\t\t$('#options').hide();\n\t\t\t$('#startCards').show();\n\t\t\t// Enable bets\n\t\t\t$scope.stopBets = false;\n\t\t}\n\t}\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 11/24/2014.\r\n */\nangular.module('mcnedward').service('blackjackService', ['$rootScope', 'playerService', function ($rootScope, playerService) {\n\t'use strict';\n\n\tvar blackjackService = {};\n\tvar suits = ['clubs', 'spades', 'diamonds', 'hearts'];\n\tvar cards = [];\n\n\tfunction createCard(suit, value) {\n\t\tvar name, srcName;\n\t\tif (value == 1 || value > 10) {\n\t\t\tswitch (value) {\n\t\t\t\tcase 1:\n\t\t\t\t\tname = 'Ace';\n\t\t\t\t\tvalue = 11;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 11:\n\t\t\t\t\tname = 'Jack';\n\t\t\t\t\tvalue = 10;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 12:\n\t\t\t\t\tname = 'Queen';\n\t\t\t\t\tvalue = 10;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13:\n\t\t\t\t\tname = 'King';\n\t\t\t\t\tvalue = 10;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsrcName = suit.substring(0, 1).toLowerCase() + name.substring(0, 1).toLowerCase();\n\t\t} else {\n\t\t\tname = value;\n\t\t\tsrcName = suit.substring(0, 1).toLowerCase() + value;\n\t\t}\n\t\tvar id = suit + name;\n\t\treturn {\n\t\t\tsuit: suit,\n\t\t\tname: name,\n\t\t\tvalue: value,\n\t\t\tid: id,\n\t\t\tisFaceDown: false,\n\t\t\tsrc: 'img/blackjack/card/' + srcName + '.png'\n\t\t};\n\t}\n\n\tfunction createCards() {\n\t\tcards = [];\n\t\tfor (var i = 0; i < suits.length; i++) {\n\t\t\tfor (var value = 1; value < 14; value++) {\n\t\t\t\tvar card = createCard(suits[i], value);\n\t\t\t\tcards.push(card);\n\t\t\t}\n\t\t}\n\t}\n\n\tblackjackService.dealCards = function () {\n\t\tshuffle();\n\t\t//fixDeck();\n\t\tfor (var x = 0; x < 4; x++) {\n\t\t\tif (x % 2 === 0) {\n\t\t\t\tdealCard(playerService.getPlayer());\n\t\t\t} else {\n\t\t\t\tif (x == 3) dealCard(playerService.getDealer(), true);else dealCard(playerService.getDealer());\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction dealCard(user, faceDown) {\n\t\tvar card = cards[0];\n\t\tif (faceDown) card.isFaceDown = faceDown;\n\t\tplayerService.addCard(user, card);\n\n\t\tcards.splice(cards.indexOf(card), 1);\n\t}\n\n\tblackjackService.hitMe = function (user) {\n\t\tdealCard(user);\n\t};\n\n\tblackjackService.stay = function () {\n\t\tvar dealer = playerService.getDealer();\n\t\tfor (var x = 0; x < dealer.cards; x++) {\n\t\t\tif (dealer.cards[x].isFaceDown) {\n\t\t\t\tdealer.cards[x].faceDown = false;\n\t\t\t}\n\t\t}\n\t\twhile (dealer.handValue < 17) {\n\t\t\tdealCard(dealer);\n\t\t}\n\t\tif (dealer.handValue > 21) {\n\t\t\t$rootScope.$broadcast('dealerBusted');\n\t\t} else if (dealer.handValue > playerService.getPlayer().handValue) {\n\t\t\t$rootScope.$broadcast('dealerWon');\n\t\t} else if (dealer.handValue == playerService.getPlayer().handValue) {\n\t\t\t$rootScope.$broadcast('push');\n\t\t} else {\n\t\t\t$rootScope.$broadcast('playerWon');\n\t\t}\n\t\t$rootScope.$broadcast('showCards');\n\t};\n\n\t// Fischer-Yates shuffle\n\tfunction shuffle() {\n\t\tcreateCards();\n\n\t\tvar cardsCopy = [],\n\t\t    cardsCount = cards.length,\n\t\t    i;\n\n\t\t// While there are still cards in original deck...\n\t\twhile (cardsCount) {\n\t\t\t// Pick a random card\n\t\t\ti = Math.floor(Math.random() * cards.length);\n\t\t\tvar card = cards[i];\n\t\t\t// If not already shuffled, move it to the new array.\n\t\t\tif (i in cards) {\n\t\t\t\tcardsCopy.push(card);\n\t\t\t\tdelete cards[i];\n\t\t\t\tcardsCount--;\n\t\t\t}\n\t\t}\n\t\tcards = cardsCopy;\n\t\treturn cards;\n\t}\n\n\tfunction fixDeck() {\n\t\tcards.push(createCard('clubs', 1));\n\t\tcards.push(createCard('clubs', 1));\n\t\tcards.push(createCard('clubs', 10));\n\t\tcards.push(createCard('clubs', 9));\n\t\tcards.push(createCard('clubs', 1));\n\t\tcards.push(createCard('clubs', 7));\n\t\tcards.push(createCard('clubs', 10));\n\t\tcards.push(createCard('clubs', 9));\n\t}\n\n\t// Spin through dealer's cards and flip any face downs\n\tblackjackService.flipCards = function () {\n\t\tfor (var c = 0; c < playerService.getDealer().cards.length; c++) {\n\t\t\tvar card = playerService.getDealer().cards[c];\n\t\t\tif (card.isFaceDown) {\n\t\t\t\tcard.isFaceDown = false;\n\t\t\t\tplayerService.getDealer().table.find($('#' + card.id)).attr('src', card.src);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn blackjackService;\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 11/24/2014.\r\n */\nangular.module('mcnedward').service('playerService', ['$rootScope', function ($rootScope) {\n\t'use strict';\n\n\tvar playerService = {},\n\t    users = {};\n\n\tfunction updateUser(user) {\n\t\tusers[user.type] = user;\n\t\tlocalStorage.users = JSON.stringify(users);\n\t}\n\tfunction updateUsers(users) {\n\t\tfor (var i = 0; i < users.length; i++) {\n\t\t\tvar user = users[i];\n\t\t\tupdateUser(user);\n\t\t}\n\t}\n\n\tplayerService.getPlayer = function () {\n\t\treturn users.player;\n\t};\n\tplayerService.getDealer = function () {\n\t\treturn users.dealer;\n\t};\n\tplayerService.resetUsers = function () {\n\t\tinitUsers();\n\t};\n\t// Find the user based on the passed in user's type, then update\n\tplayerService.updateUser = function (user) {\n\t\tupdateUser(user);\n\t};\n\t// Update all playerService\n\tplayerService.updateUsers = function (users) {\n\t\tupdateUsers(users);\n\t};\n\tplayerService.addCard = function (user, card) {\n\t\tuser.cards.push(card);\n\t\tuser.handValue = user.handValue + card.value;\n\t\tif (user.handValue > 21) {\n\t\t\tadjustForAces(user);\n\t\t}\n\t\tif (user.handValue == 21) {\n\t\t\t$rootScope.$broadcast('21', user);\n\t\t\t$rootScope.hit21 = true;\n\t\t}\n\t};\n\tplayerService.addChip = function (amount) {\n\t\tusers.player.chips['chip' + amount + 's']++;\n\t\tusers.player.bet = users.player.bet + amount;\n\t\tupdateUser(users.player);\n\t};\n\tplayerService.clearBet = function () {\n\t\tusers.player.bet = 0;\n\t\tusers.player.chips = getChips();\n\t};\n\tplayerService.userWon = function (userType) {\n\t\tvar player = users.player;\n\t\tvar dealer = users.dealer;\n\t\tif (userType == 'player') {\n\t\t\tplayer.wins = player.wins + 1;\n\t\t\tdealer.loses = dealer.loses + 1;\n\t\t\tplayer.money += player.bet;\n\t\t} else {\n\t\t\tdealer.wins = dealer.wins + 1;\n\t\t\tplayer.loses = player.loses + 1;\n\t\t\tplayer.money -= player.bet;\n\t\t}\n\t\tplayer.bet = 0;\n\t\tplayer.chips = getChips();\n\t\tupdateUsers([player, dealer]);\n\t};\n\n\t// Called when service is created, and when a new deck is dealt\n\tfunction initUsers() {\n\t\tfunction clearHand(user) {\n\t\t\tuser.cards = [];\n\t\t\tuser.handValue = 0;\n\t\t}\n\t\t// Get users from localStorage. This converts their tables back to a jQuery element as well\n\t\tfunction getSavedUsers() {\n\t\t\tvar savedUsers = JSON.parse(localStorage.users);\n\t\t\tsavedUsers.player.table = $(savedUsers.player.table.selector);\n\t\t\tsavedUsers.dealer.table = $(savedUsers.dealer.table.selector);\n\t\t\treturn savedUsers;\n\t\t}\n\t\t// If users already exist, use them\n\t\tif (localStorage.users && localStorage.users.length > 2) {\n\t\t\tvar savedUsers = getSavedUsers();\n\t\t\tvar player = savedUsers.player;\n\t\t\tvar dealer = savedUsers.dealer;\n\t\t\tclearHand(player);\n\t\t\tclearHand(dealer);\n\t\t\tupdateUsers([player, dealer]);\n\t\t} else {\n\t\t\tusers.player = {\n\t\t\t\ttable: $('#pTable'),\n\t\t\t\tcards: [],\n\t\t\t\thandValue: 0,\n\t\t\t\ttype: 'player',\n\t\t\t\tmoney: 1000,\n\t\t\t\tbet: 0,\n\t\t\t\tchips: getChips(),\n\t\t\t\twins: 0,\n\t\t\t\tloses: 0\n\t\t\t};\n\t\t\tusers.dealer = {\n\t\t\t\ttable: $('#dTable'),\n\t\t\t\tcards: [],\n\t\t\t\thandValue: 0,\n\t\t\t\ttype: 'dealer',\n\t\t\t\twins: 0,\n\t\t\t\tloses: 0\n\t\t\t};\n\t\t\tlocalStorage.users = JSON.stringify(users);\n\t\t}\n\t}\n\tinitUsers();\n\n\tfunction getChips() {\n\t\treturn {\n\t\t\tchip5s: 0,\n\t\t\tchip10s: 0,\n\t\t\tchip25s: 0,\n\t\t\tchip100s: 0,\n\t\t\tchip500s: 0\n\t\t};\n\t}\n\n\t// Check the user's hand for Aces. If there is an ace with the value of 11, change the value to 1\n\t// If the hand value is over 21 after adjusting, the player busts\n\tfunction adjustForAces(user) {\n\t\tfor (var x = 0; x < user.cards.length; x++) {\n\t\t\tif (user.cards[x].name == 'Ace') {\n\t\t\t\t// If ace card not already adjusted, fix that\n\t\t\t\tif (user.cards[x].value == 11) {\n\t\t\t\t\tuser.cards[x].value = 1;\n\t\t\t\t\tupdateUserHandValue(user);\n\t\t\t\t}\n\t\t\t\t// Stop spinning if hand value less than 21\n\t\t\t\tif (user.handValue < 21) break;\n\t\t\t}\n\t\t}\n\t\tif (user.handValue > 21) {\n\t\t\t$rootScope.$broadcast('busted', user);\n\t\t}\n\t}\n\n\tfunction updateUserHandValue(user) {\n\t\tvar value = 0;\n\t\tfor (var x = 0; x < user.cards.length; x++) {\n\t\t\tvalue = value + user.cards[x].value;\n\t\t}\n\t\tuser.handValue = value;\n\t\tupdateUser(user);\n\t}\n\n\treturn playerService;\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 2/19/15.\r\n */\nangular.module('mcnedward').directive('playingCard', function () {\n\t'use strict';\n\n\treturn {\n\t\tscope: {\n\t\t\tcard: '='\n\t\t},\n\t\trestrict: 'AE',\n\t\treplace: 'true',\n\t\tcontroller: function controller($scope) {\n\t\t\t$scope.$on('playerBusted', function () {\n\t\t\t\tif ($scope.card.isFaceDown) {\n\t\t\t\t\t$('#' + $scope.card.id).attr('src', $scope.card.src);\n\t\t\t\t}\n\t\t\t});\n\t\t\t$scope.$on('showCards', function () {\n\t\t\t\t$('#' + $scope.card.id).attr('src', $scope.card.src);\n\t\t\t});\n\t\t},\n\t\tlink: function link(scope, element, attrs) {\n\t\t\tif (scope.card.isFaceDown) element.attr('src', 'img/blackjack/card/b2fv.png');else element.attr('src', scope.card.src);\n\t\t},\n\t\ttemplate: '<img id=\"{{card.id}}\" class=\"card-img\"/>'\n\t};\n});","'use strict';\n\nangular.module('mcnedward').controller('ColorZonesCtrl', ['$rootScope', '$scope', function ColorZonesCtrl($rootScope, $scope) {\n  'use strict';\n\n  $(document).ready(function () {\n    $scope.renderer = new Renderer();\n    var timeZoneService = new TimeZoneService($scope.renderer.width());\n    var colorPicker = new ColorPicker();\n    var model = new ColorZonesViewModel($scope.renderer, timeZoneService, colorPicker);\n    // Figure out why I need this override here...\n    ko.options.useOnlyNativeEvents = true;\n    ko.applyBindings(model, $('#main')[0]);\n\n    var tooltipService = new TooltipService([{ id: $('#canvasContainer'), timeout: 8 }, { id: $('#hoursControl'), timeout: 3 }, { id: $('#minutesControl'), timeout: 3 }, { id: $('#secondsControl'), timeout: 3 }, { id: $('#opacityControl'), timeout: 4 }, { id: $('#showTimesControl'), timeout: 6 }, { id: $('#showColorsControl'), timeout: 6 }]);\n    tooltipService.loadToolips();\n  });\n\n  $rootScope.$on('stopRendering', function () {\n    $scope.renderer.stopRendering(true);\n  });\n}]);","'use strict';\n\nvar ColorZonesViewModel = function ColorZonesViewModel(renderer, timeZoneService, colorPicker) {\n  var self = this;\n\n  var width = renderer.width(),\n      height = renderer.height();\n  var hoverZoneColor = '#660d60';\n  var timeFormat = 'HH:mm:ss';\n  var _hoverTimeZoneKey, _hoverRegionKey;\n  var _selectedZoneInfo;\n  var _mouseX, _mouseY;\n  // UI options\n  self.colorPicker = ko.observable(colorPicker);\n  self.opacity = ko.observable(80);\n  self.showTimes = ko.observable(false);\n  self.colorAllZones = ko.observable(true);\n  // Map options\n  self.width = ko.observable(width + 'px');\n  self.height = ko.observable(height + 'px');\n  self.zoom = ko.observable(1);\n  self.centerLat = ko.observable(20);\n  self.centerLng = ko.observable(0);\n  // Cached zones and regions\n  self.timeZones = ko.observableArray();\n  self.timeZoneRegions = ko.observable({});\n\n  var _textColor = ko.pureComputed(function () {\n    return self.colorAllZones() ? 'white' : 'black';\n  });\n\n  // Draw Loop\n  renderer.renderFunction(function () {\n    if (self.timeZones().length === 0) return;\n\n    var timeTexts = [];\n    // Trigger the intervals to draw all the zones\n    for (var i = 0; i < self.timeZones().length; i++) {\n      var timeZone = self.timeZones()[i];\n\n      var current = moment().tz(timeZone.name);\n      var hours = adjustTime(current.hours());\n      var minutes = adjustTime(current.minutes());\n      var seconds = adjustTime(current.seconds());\n\n      var red = getColorInterval(colorPicker.red, hours, minutes, seconds);\n      var green = getColorInterval(colorPicker.green, hours, minutes, seconds);\n      var blue = getColorInterval(colorPicker.blue, hours, minutes, seconds);\n\n      var color = \"#\" + red + green + blue;\n      if (self.colorAllZones()) {\n        renderer.polygon(timeZone.coords, color, self.opacity());\n      }\n\n      if (timeZone.centroidPolygon === undefined) continue;\n      var zoneInfo = {\n        textX: timeZone.centroidPolygon.centroid.x,\n        textY: timeZone.centroidPolygon.centroid.y,\n        time: current.format(timeFormat),\n        colorHex: color\n      };\n      timeTexts.push(zoneInfo);\n      if (_hoverTimeZoneKey && _hoverTimeZoneKey !== '' && _hoverTimeZoneKey === timeZone.name) {\n        _selectedZoneInfo = zoneInfo;\n      }\n    }\n\n    var hoverTimeZone = self.timeZoneRegions()[_hoverTimeZoneKey];\n    if (hoverTimeZone) {\n      $.each(hoverTimeZone, function (index, value) {\n        if (!value || !value.coords || value.coords.length === 0) return;\n        // Use the color-zone hex when only coloring the hover region\n        var hoverColor = self.colorAllZones() ? hoverZoneColor : _selectedZoneInfo.colorHex;\n        renderer.polygon(value.coords, hoverColor, 80);\n      });\n\n      if (!self.showTimes()) {\n        renderer.text(_mouseX, _mouseY - 5, _selectedZoneInfo.time, _textColor(), true);\n      }\n      renderer.text(_mouseX, _mouseY - 25, _hoverRegionKey, _textColor(), true);\n      renderer.text(_mouseX, _mouseY - 45, _selectedZoneInfo.colorHex, _textColor(), true);\n    }\n\n    // Need to do this in a separate loop here to have the times drawn on top\n    if (!self.showTimes()) return;\n    for (var j = 0; j < timeTexts.length; j++) {\n      renderer.text(timeTexts[j].textX, timeTexts[j].textY, timeTexts[j].time, _textColor());\n    }\n  });\n\n  var _mapCallback;\n  // Load the map image\n  function loadMap(mapCallback) {\n    _mapCallback = mapCallback;\n    fetch('/api/color-zones/map?centerLat=' + self.centerLat() + '&centerLng=' + self.centerLng() + '&zoom=' + self.zoom() + '&width=' + width + '&height=' + height).then(function (response) {\n      if (!response.ok) {\n        console.error('Something went wrong trying to load the map image...');\n        return;\n      }\n      response.text().then(function (mapUrl) {\n        renderer.loadImage(mapUrl);\n        if (_mapCallback !== undefined) _mapCallback();\n      });\n    });\n  }\n  loadMap();\n\n  // Load the time zones\n  timeZoneService.setup(self.centerLat, self.centerLng, self.zoom); // Pass in the observables\n  timeZoneService.loadTimeZones(function (errorMessage) {\n    console.error(errorMessage);\n  }, self.timeZones, self.timeZoneRegions);\n\n  function adjustTime(interval) {\n    if (interval < 10) {\n      interval = \"0\" + interval;\n    }\n    return interval.toString();\n  }\n\n  function getColorInterval(color, hours, minutes, seconds) {\n    var interval = colorPicker.colors()[color].interval;\n    switch (interval) {\n      case colorPicker.hours:\n        return hours;\n      case colorPicker.minutes:\n        return minutes;\n      case colorPicker.seconds:\n        return seconds;\n      default:\n        console.warn('Could not find an interval for: ' + interval + '...');\n    }\n  }\n\n  function rayCastTest(points, x, y, zoneName) {\n    var rayTest = 0;\n    var lastPoint = points[points.length - 1];\n\n    for (var j = 0; j < points.length; j++) {\n      var point = points[j];\n\n      if (lastPoint.y <= y && point.y >= y || lastPoint.y > y && point.y < y) {\n        var slope = (point.x - lastPoint.x) / (point.y - lastPoint.y);\n        var testPoint = slope * (y - lastPoint.y) + lastPoint.x;\n        if (testPoint < x) {\n          rayTest++;\n        }\n      }\n      lastPoint = point;\n    }\n    // If the count is odd, we are in the polygon\n    return rayTest % 2 === 1;\n  }\n\n  renderer.addMouseOverEvent(function (x, y) {\n    if (self.timeZones().length === 0) return;\n\n    var found = false;\n    for (var i = 0; i < self.timeZones().length; i++) {\n      var zone = self.timeZones()[i];\n      var boundingBox = zone.boundingBox;\n      if (boundingBox === undefined) return;\n\n      // Source: https://github.com/dosx/timezone-picker\n      if (y > boundingBox.xyMax.y && y < boundingBox.xyMin.y && x > boundingBox.xyMin.x && x < boundingBox.xyMax.x) {\n        // Mouse is in the zone bounds, so now have to check if it is in one of this zone's regions\n        var regions = self.timeZoneRegions()[zone.name];\n        for (var key in regions) {\n          if (!regions.hasOwnProperty(key)) continue;\n          if (rayCastTest(regions[key].coords, x, y)) {\n            _hoverTimeZoneKey = zone.name;\n            _hoverRegionKey = key;\n            _mouseX = x;\n            _mouseY = y;\n            return;\n          }\n        }\n      }\n    }\n  }, self.centerLat(), self.centerLng());\n\n  renderer.addMouseScrollEvent(function (zoom) {\n    if (zoom > 1) {\n      self.zoom(self.zoom() + 1);\n    } else {\n      self.zoom(self.zoom() - 1);\n    }\n\n    if (self.zoom() < 1) {\n      // Can't zoom any lower\n      self.zoom(1);\n      return;\n    }\n  });\n};","'use strict';\n\n/**\r\n * Created by Edward on 10/11/2016.\r\n */\nangular.module('mcnedward').controller('ContactCtrl', ['$scope', function ContactCtrl($scope) {\n\t\t'use strict';\n\n\t\t$scope.contactInfo = {};\n\t\t$scope.isFormSubmitted = false;\n\t\t$scope.contactSuccessMessage = '';\n\t\t$scope.contactErrorMessage = '';\n\n\t\tfunction clear() {\n\t\t\t\t$scope.contactSuccessMessage = '';\n\t\t\t\t$scope.contactErrorMessage = '';\n\t\t}\n\t\tfunction showError(message) {\n\t\t\t\tclear();\n\t\t\t\t$scope.contactErrorMessage = message;\n\t\t}\n\n\t\t$scope.submitContact = function (form, contactInfo) {\n\t\t\t\tif ($scope.isFormSubmitted) return;\n\t\t\t\tform.$setSubmitted();\n\t\t\t\tif (form.$invalid) return;\n\t\t\t\t$scope.isFormSubmitted = true;\n\t\t\t\tform.$setPristine();\n\t\t\t\tform.$setUntouched();\n\t\t\t\tclear();\n\n\t\t\t\tvar reCaptchaError = 'Sorry, but something went wrong with the reCaptcha. Please refresh the page and try again.';\n\t\t\t\tif (grecaptcha === null) {\n\t\t\t\t\t\tshowError(reCaptchaError);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar secretResponse = contactInfo.recaptchaResponse;\n\t\t\t\tif (secretResponse === null) {\n\t\t\t\t\t\tshowError(reCaptchaError);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$scope.contactSuccessMessage = 'Sending...';\n\t\t\t\tvar url = '/api/contact?secretResponse=' + secretResponse;\n\t\t\t\tfetch(url, {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify(contactInfo)\n\t\t\t\t}).then(function (response) {\n\t\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\t\t\tresponse.text().then(function (text) {\n\t\t\t\t\t\t\t\t\t\tshowError(text);\n\t\t\t\t\t\t\t\t\t\t$scope.isFormSubmitted = false;\n\t\t\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponse.text().then(function (text) {\n\t\t\t\t\t\t\t\t\t\t$scope.contactSuccessMessage = text;\n\t\t\t\t\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t\t\t\t\t\t// Trigger Google Analytic event\n\t\t\t\t\t\t\t\t\t\tga('send', 'event', 'Contact', 'Email', 'From: ' + contactInfo.email + ' - Subject: ' + contactInfo.subject);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n\n\t\t$scope.checkLength = function (value) {\n\t\t\t\tvar length = value ? value.length : 0;\n\t\t\t\tif (!length) length = 0;\n\t\t\t\treturn length;\n\t\t};\n\t\t$scope.emailMaxLength = 100;\n\t\t$scope.subjectMaxLength = 100;\n\t\t$scope.messageMaxLength = 1000;\n\t\t$scope.subjectLength = function () {\n\t\t\t\treturn $scope.checkLength($scope.contactInfo.subject);\n\t\t};\n\t\t$scope.messageLength = function () {\n\t\t\t\treturn $scope.checkLength($scope.contactInfo.message);\n\t\t};\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 10/7/2014.\r\n */\nangular.module('mcnedward').controller('IICtrl', ['$scope', 'modalService', function IICtrl($scope, modalService) {\n\t'use strict';\n\n\t$scope.iiInfo = {};\n\t$scope.isFormSubmitted = false;\n\n\tfunction showAppError(errorMessage) {\n\t\t$scope.showAppError = true;\n\t\t$scope.appError = error;\n\t}\n\tfunction showLibError(errorMessage) {\n\t\t$scope.showLibError = true;\n\t\t$scope.libError = error;\n\t}\n\tfunction clearAppError(errorMessage) {\n\t\t$scope.showAppError = false;\n\t\t$scope.appError = '';\n\t}\n\tfunction clearLibError(errorMessage) {\n\t\t$scope.showLibError = false;\n\t\t$scope.libError = '';\n\t}\n\n\t$scope.openDownloadForApp = function () {\n\t\tclearAppError();\n\t\tmodalService.showModal('downloadAppModal');\n\t};\n\t$scope.openDownloadForLib = function () {\n\t\tclearLibError();\n\t\tmodalService.showModal('downloadLibModal');\n\t};\n\n\t$scope.downloadIIApp = function (form, iiAppInfo) {\n\t\tif ($scope.isAppFormSubmitted) return;\n\t\tform.$setSubmitted();\n\t\tif (form.$invalid) return;\n\t\t$scope.isAppFormSubmitted = true;\n\t\tform.$setPristine();\n\t\tform.$setUntouched();\n\t\tclearAppError();\n\n\t\tvar downloadUrl = '/api/ii/app?secretResponse=' + iiAppInfo.recaptchaResponse;\n\t\twindow.location.href = downloadUrl;\n\t};\n\t$scope.downloadIILib = function (form, iiLibInfo) {\n\t\tif ($scope.isLibFormSubmitted) return;\n\t\tform.$setSubmitted();\n\t\tif (form.$invalid) return;\n\t\t$scope.isLibFormSubmitted = true;\n\t\tform.$setPristine();\n\t\tform.$setUntouched();\n\t\tclearLibError();\n\n\t\tvar downloadUrl = '/api/ii/lib?secretResponse=' + iiLibInfo.recaptchaResponse;\n\t\twindow.location.href = downloadUrl;\n\t};\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 2/28/2016.\r\n */\nangular.module('mcnedward').directive('directory', ['$rootScope', function ($rootScope) {\n\t'use strict';\n\n\treturn {\n\t\trestrict: 'AE',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\tname: '=',\n\t\t\tid: '=',\n\t\t\tdirectories: '=',\n\t\t\tclasses: '='\n\t\t},\n\t\tlink: function link(scope, element, attrs) {\n\t\t\tscope.selectClass = function (directoryId, classId) {\n\t\t\t\t$rootScope.$broadcast('selectClass', {\n\t\t\t\t\tdirectoryId: directoryId,\n\t\t\t\t\tclassId: classId\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// If there is no name, this is a temporary directory used only for the upload\n\t\t\tscope.isRealDirectory = scope.name !== null && scope.name !== \"\";\n\t\t\tscope.showContents = false;\n\t\t},\n\t\ttemplateUrl: 'parser/directory.html'\n\t};\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 2/28/2016.\r\n */\nangular.module('mcnedward').directive('dragAndDrop', ['$rootScope', '$timeout', function ($rootScope, $timeout) {\n\t'use strict';\n\n\treturn {\n\t\trestrict: 'E',\n\t\tlink: function link(scope, element, attrs) {\n\t\t\tvar defaultDragAreaMessage = 'Drag files here!';\n\t\t\tscope.dragAreaMessage = defaultDragAreaMessage;\n\t\t\tscope.dragoverClass = '';\n\t\t\tscope.uploadProgress = 0;\n\n\t\t\tscope.handleError = function (message, error) {\n\t\t\t\tscope.fileSelected = false;\n\t\t\t\tscope.hasError = true;\n\t\t\t\tscope.load(false);\n\t\t\t\tscope.dragoverClass = 'dragover-error';\n\t\t\t\tscope.dragAreaMessage = '';\n\t\t\t\tscope.dragAreaError = message;\n\t\t\t\tconsole.log(error, message);\n\t\t\t};\n\n\t\t\tvar firstTime = true;\n\t\t\tvar loading = false;\n\t\t\tscope.load = function (isLoading) {\n\t\t\t\tscope.dragAreaError = '';\n\t\t\t\tif (isLoading) {\n\t\t\t\t\tloading = true;\n\t\t\t\t\tscope.uploadProgress = 0;\n\t\t\t\t\tcheckProgress();\n\t\t\t\t} else {\n\t\t\t\t\tloading = false;\n\t\t\t\t\tif (scope.hasError) return;\n\t\t\t\t\tscope.dragAreaMessage = 'Finished!';\n\t\t\t\t\tscope.dragoverClass = '';\n\t\t\t\t\tscope.uploadProgress = 100;\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tscope.dragAreaMessage = defaultDragAreaMessage;\n\t\t\t\t\t\tscope.uploadProgress = 0;\n\t\t\t\t\t}, 3000);\n\t\t\t\t}\n\t\t\t};\n\t\t\tfunction checkProgress() {\n\t\t\t\t// $timeout(function() {\n\t\t\t\t// \tparserService.getUploadProgress(scope.secretResponse, scope.token).then((response) => {\n\t\t\t\t//     if (!response.ok) return;\n\n\t\t\t\t//     response.text().then((text) => {\n\t\t\t\t//       scope.uploadProgress = text;\n\t\t\t\t//       if (loading) {\n\t\t\t\t//         checkProgress();\n\t\t\t\t//       }\n\t\t\t\t//     });\n\t\t\t\t// \t});\n\t\t\t\t// }, 300);\n\t\t\t}\n\n\t\t\telement.bind('dragenter', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\te.originalEvent.dataTransfer.dropEffect = 'copy';\n\t\t\t\tscope.dragoverClass = 'dragover';\n\t\t\t\tscope.dragAreaMessage = 'Drop files!';\n\t\t\t\tscope.dragAreaError = '';\n\t\t\t\tscope.$apply();\n\t\t\t});\n\t\t\telement.bind('dragleave', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\tscope.dragoverClass = '';\n\t\t\t\tscope.dragAreaMessage = 'Drag files here!';\n\t\t\t\tscope.dragAreaError = '';\n\t\t\t\tscope.$apply();\n\t\t\t});\n\t\t\telement.bind('dragover', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\te.originalEvent.dataTransfer.dropEffect = 'copy';\n\t\t\t\tscope.dragoverClass = 'dragover';\n\t\t\t\tscope.dragAreaMessage = 'Drop files!';\n\t\t\t\tscope.dragAreaError = '';\n\t\t\t\tscope.$apply();\n\t\t\t});\n\t\t\telement.bind('dragevent', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t});\n\t\t\telement.bind('drop', function (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\n\t\t\t\tvar fileId = 1; // Unique id for identifying the file in the server cache\n\t\t\t\tvar onError = function onError(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t};\n\n\t\t\t\tfunction handleDirectory(item, directory, topDirectory) {\n\t\t\t\t\tvar reader = item.createReader();\n\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\tvar iterationAttempts = [];\n\t\t\t\t\t\t(function readDirectory(directory, topDirectory) {\n\t\t\t\t\t\t\treader.readEntries(function (entries) {\n\t\t\t\t\t\t\t\tif (!entries.length) {\n\t\t\t\t\t\t\t\t\tPromise.all(iterationAttempts).then(function (result) {\n\t\t\t\t\t\t\t\t\t\t// Everything should be done now!\n\t\t\t\t\t\t\t\t\t\tresolve(topDirectory);\n\t\t\t\t\t\t\t\t\t}, onError);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\titerationAttempts.push(Promise.all(entries.map(function (entry) {\n\t\t\t\t\t\t\t\t\t\tif (entry.isFile) {\n\t\t\t\t\t\t\t\t\t\t\tentry.file(function (file) {\n\t\t\t\t\t\t\t\t\t\t\t\tparentDirectory.uploadFiles.push(file);\n\t\t\t\t\t\t\t\t\t\t\t\t// Add the fileId to the file name, to be stripped server-side\n\t\t\t\t\t\t\t\t\t\t\t\tvar newFile = new ParserFile(fileId++, file.name);\n\t\t\t\t\t\t\t\t\t\t\t\tdirectory.files.push(newFile);\n\t\t\t\t\t\t\t\t\t\t\t\treturn newFile;\n\t\t\t\t\t\t\t\t\t\t\t}, function (e) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar newDirectory = new ParserDirectory(entry.name, [], []);\n\t\t\t\t\t\t\t\t\t\t\t// If this is inside a directory, put it in there!\n\t\t\t\t\t\t\t\t\t\t\tif (directory) {\n\t\t\t\t\t\t\t\t\t\t\t\tdirectory.directories.push(newDirectory);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tdirectory = newDirectory;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn handleDirectory(entry, newDirectory, topDirectory);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})));\n\t\t\t\t\t\t\t\t\t// Continue reading for more entries\n\t\t\t\t\t\t\t\t\treadDirectory(directory, topDirectory);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})(directory, topDirectory);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tvar event = e.originalEvent;\n\t\t\t\tif (event) {\n\t\t\t\t\tvar dataTransfer = event.dataTransfer;\n\t\t\t\t\tvar items = dataTransfer.items;\n\t\t\t\t\tvar parentDirectory = new ParserDirectory();\n\t\t\t\t\tparentDirectory.uploadFiles = []; // All of the files to upload\n\t\t\t\t\tif (items.length == 1) {\n\t\t\t\t\t\tvar item = items[0].webkitGetAsEntry();\n\t\t\t\t\t\tif (item.isFile) {\n\t\t\t\t\t\t\thandleFiles(items);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparentDirectory.name = item.name;\n\t\t\t\t\t\t\thandleDirectory(item, parentDirectory, parentDirectory).then(function (result) {\n\t\t\t\t\t\t\t\tnotifyDirectoryDone(result);\n\t\t\t\t\t\t\t}, onError);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleFiles(items);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction handleFiles(items) {\n\t\t\t\t\tvar webkitItems = [];\n\t\t\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\t\t\twebkitItems.push(items[i].webkitGetAsEntry());\n\t\t\t\t\t}\n\t\t\t\t\t// Need to wrap this in an empty directory\n\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\tvar iterationAttempts = [];\n\t\t\t\t\t\titerationAttempts.push(Promise.all(webkitItems.map(function (item) {\n\t\t\t\t\t\t\tif (item.isFile) {\n\t\t\t\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\t\t\t\titem.file(function (file) {\n\t\t\t\t\t\t\t\t\t\tparentDirectory.uploadFiles.push(file);\n\t\t\t\t\t\t\t\t\t\t// Add the fileId to the file name, to be stripped server-side\n\t\t\t\t\t\t\t\t\t\tvar newFile = new ParserFile(fileId++, file.name);\n\t\t\t\t\t\t\t\t\t\tparentDirectory.files.push(newFile);\n\t\t\t\t\t\t\t\t\t\tresolve(parentDirectory);\n\t\t\t\t\t\t\t\t\t\treturn newFile;\n\t\t\t\t\t\t\t\t\t}, onError);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar newDirectory = new ParserDirectory(item.name, [], []);\n\t\t\t\t\t\t\t\t// If this is inside a directory, put it in there!\n\t\t\t\t\t\t\t\tif (parentDirectory) {\n\t\t\t\t\t\t\t\t\tparentDirectory.directories.push(newDirectory);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tparentDirectory = newDirectory;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn handleDirectory(item, newDirectory, parentDirectory);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})));\n\t\t\t\t\t\tPromise.all(iterationAttempts).then(function (result) {\n\t\t\t\t\t\t\t// Everything should be done now!\n\t\t\t\t\t\t\tresolve(parentDirectory);\n\t\t\t\t\t\t}, onError);\n\t\t\t\t\t}).then(function (result) {\n\t\t\t\t\t\tnotifyDirectoryDone(result);\n\t\t\t\t\t}, onError);\n\t\t\t\t}\n\n\t\t\t\tfunction notifyDirectoryDone(file) {\n\t\t\t\t\tscope.dragoverClass = 'dropped';\n\t\t\t\t\tscope.dragAreaMessage = 'Ready for Upload!';\n\t\t\t\t\tscope.$apply();\n\t\t\t\t\tscope.filesDropped(file);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\ttemplateUrl: 'parser/fileUpload.html'\n\t};\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 2/26/2016.\r\n */\n\nangular.module('mcnedward').controller('ParserCtrl', ['$rootScope', '$scope', '$window', 'parserService', 'recaptchaService', 'modalService', function ParserCtrl($rootScope, $scope, $window, parserService, recaptchaService, modalService) {\n  'use strict';\n\n  if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n    modalService.showModal('deviceModal');\n  }\n\n  $scope.uploadInfo = {};\n  $scope.isFormSubmitted = false;\n  $scope.isParsingComplete = false;\n  $scope.fileUploadMessage = \"Click to choose a Java file or project to parse!\";\n  $scope.errorMessage = \"\";\n  $scope.fileSelected = false;\n  var errorParsingMessage = \"Something went wrong parsing files...Please try again.\";\n  var errorUploadingMessage = \"Something went wrong uploading files...Please try again.\";\n\n  $('#file-upload').change(function () {\n    var files = this.files;\n    if (!files || files.length === 0) {\n      console.log('No files selected...');\n      return;\n    }\n    var fileName = files[0].name;\n    $scope.files = files;\n\n    $scope.fileName = fileName;\n    $scope.fileSelected = true;\n    $scope.$apply();\n  });\n\n  function errorHandler(message, error) {\n    var errorMessage = '';\n    var data = error && error.data ? error.data : null,\n        errors = data && data.errors ? data.errors : [];\n    if (errors.length > 0) {\n      for (var i = 0; i < errors.length; i++) {\n        errorMessage += errors[i];\n      }\n    } else {\n      errorMessage = message;\n    }\n    $scope.handleError(errorMessage, error);\n    $scope.parsingComplete = false;\n  }\n\n  function uploadFiles(secretResponse, token) {\n    $scope.secretResponse = secretResponse;\n    $scope.token = token;\n\n    parserService.uploadFiles($scope.files, secretResponse, token).then(function (response) {\n      if (!response.ok) {\n        response.text().then(function (text) {\n          errorHandler(text);\n        });\n        return;\n      }\n      response.json().then(function (uploadResponse) {\n        $scope.uploadDirectory.token = uploadResponse.token;\n        $scope.uploadDirectory.fileIds = uploadResponse.fileIds;\n        try {\n          // Send back the uploadResponse along with the directory structure\n          // This is when the actual parsing of the files will happen\n          parserService.parseFiles($scope.uploadDirectory, secretResponse, token).then(function (response) {\n            if (!response.ok) {\n              response.text().then(function (text) {\n                errorHandler(text);\n                return;\n              });\n            } else {\n              $scope.dragAreaMessage = 'Analyzing your files...';\n              $scope.$apply();\n              response.json().then(function (directoryResponse) {\n                parserService.saveDirectory(directoryResponse);\n\n                $scope.load(false);\n                $scope.fileSelected = false;\n                $scope.isParsingComplete = true;\n\n                $scope.uploadDirectory = {};\n                $scope.directory = directoryResponse;\n                var classObject = findFirstFileInDirectory(directoryResponse);\n                $scope.classObject = classObject;\n                styleLineNumbers(classObject);\n              });\n            }\n          }, function (error) {\n            errorHandler(errorParsingMessage, error);\n          });\n        } catch (error) {\n          errorHandler(errorParsingMessage, error);\n        }\n      });\n    });\n  }\n\n  $scope.uploadFile = function (form, uploadInfo) {\n    if ($scope.isFormSubmitted) return;\n    form.$setSubmitted();\n    if (form.$invalid) return;\n    $scope.isFormSubmitted = true;\n    form.$setPristine();\n    form.$setUntouched();\n    $scope.load(true);\n    $scope.dragAreaMessage = 'Uploading your files...';\n    recaptchaService.verify(uploadInfo.recaptchaResponse, uploadFiles, errorHandler);\n  };\n\n  $scope.selectClassObject = function (file) {\n    for (var i = 0; i < $scope.classObjects.length; i++) {\n      var cObject = $scope.classObjects[i];\n      if (cObject.fileName === file.fileName) {\n        $scope.classObject = cObject;\n      }\n      // This should be safe since we should always have the same number of fileNames and classObjects\n      $scope.fileNames[i].isSelected = false;\n    }\n    file.isSelected = true;\n    styleLineNumbers($scope.classObject);\n  };\n\n  $scope.filesDropped = function (directory) {\n    $scope.fileName = directory.name ? directory.name : directory.uploadFiles.length + ' Files';\n    $scope.files = directory.uploadFiles;\n    $scope.fileSelected = true;\n    $scope.uploadDirectory = directory;\n    $scope.$apply(); // Need to apply because this is coming from the fileUploadDirective\n  };\n\n  $scope.moveToLine = function (content) {\n    var lineNumber = content.lineNumber;\n    var element = $('#' + lineNumber);\n    element.addClass('line-animation-in');\n    setTimeout(function () {\n      element.addClass('line-animation-out');\n      setTimeout(function () {\n        element.removeClass('line-animation-in');\n        element.removeClass('line-animation-out');\n      }, 1500);\n    }, 3000);\n    $('#classContent').animate({\n      scrollTop: element.offset().top - 200\n    }, 500);\n  };\n  $rootScope.$on('selectClass', function (e, args) {\n    var classObject = searchDirectory($scope.directory, args.directoryId, args.classId);\n    if (classObject) {\n      $scope.classObject = classObject;\n      styleLineNumbers(classObject);\n    } else {\n      $scope.errorMessage = 'Could not find class.';\n    }\n  });\n  function searchDirectory(directory, directoryId, classId) {\n    var classObject;\n    if (directoryId === directory.id) {\n      if (directory.classes) {\n        classObject = searchClassesInDirectory(directory.classes, classId);\n        if (classObject) return classObject;\n      }\n    }\n    for (var i = 0; i < directory.directories.length; i++) {\n      var childDirectory = directory.directories[i];\n      classObject = searchDirectory(childDirectory, directoryId, classId);\n      if (classObject) return classObject;\n    }\n  }\n  function searchClassesInDirectory(classes, classId) {\n    for (var i = 0; i < classes.length; i++) {\n      var c = classes[i];\n      if (c.id == classId) {\n        return c;\n      }\n    }\n  }\n  function findFirstFileInDirectory(directory) {\n    if (directory.classes && directory.classes.length > 0) {\n      return directory.classes[0];\n    }\n    if (directory.directories) {\n      for (var i = 0; i < directory.directories.length; i++) {\n        classObject = findFirstFileInDirectory(directory.directories[i]);\n        if (classObject) return classObject;\n      }\n    }\n    return null;\n  }\n\n  // FOR DEBUGGING PURPOSES!\n  $scope.directory = parserService.getDirectory();\n  if ($scope.directory) {\n    $scope.isParsingComplete = true;\n    var classObject = findFirstFileInDirectory($scope.directory);\n    if (classObject) {\n      $scope.classObject = classObject;\n      styleLineNumbers(classObject);\n    } else {\n      $scope.errorMessage = 'Could not find any files in directory ' + $scope.directory.name + '.';\n    }\n  }\n\n  function setFileNames(classObjects) {\n    var fileNames = [];\n    angular.forEach(classObjects, function (value, key) {\n      fileNames.push({\n        fileName: value.fileName,\n        isSelected: false\n      });\n    });\n    $scope.fileNames = fileNames;\n  }\n\n  // Thanks to: https://jsfiddle.net/tovic/AbpRD/\n  function styleLineNumbers(classObject) {\n    var pre;\n    $('#classContent').empty();\n    if (classObject.codeTag) {\n      pre = classObject.codeTag;\n    } else {\n      pre = $('<code/>', {\n        id: 'code',\n        text: classObject.classContent\n      });\n      var preLength = pre.length;\n      for (var i = 0; i < preLength; i++) {\n        pre[i].innerHTML = '<span class=\"line-number\"></span>' + pre[i].innerHTML + '<span class=\"cl\"></span>';\n        var num = pre[i].innerHTML.split(/\\n/).length;\n        for (var j = 0; j < num; j++) {\n          var lineNumberElement = pre[i].getElementsByTagName('span')[0];\n          var number = j + 1;\n          lineNumberElement.innerHTML += '<span id=\"' + number + '\">' + number + '</span>';\n        }\n      }\n      // Cache the code tag to avoid parsing again for multiple selects\n      classObject.codeTag = pre;\n    }\n    pre.appendTo('#classContent');\n  }\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 2/26/2016.\r\n */\nangular.module('mcnedward').service('parserService', ['$http', function ($http) {\n\t'use strict';\n\n\tvar parserService = {};\n\n\tparserService.uploadFiles = function (files, secretResponse, token) {\n\t\tvar formData = new FormData();\n\t\tangular.forEach(files, function (value, key) {\n\t\t\tformData.append('files', value);\n\t\t});\n\n\t\tvar url = '/api/parser/files?secretResponse=' + secretResponse + '&requestToken=' + token;\n\t\treturn fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData\n\t\t});\n\t};\n\n\tparserService.parseFiles = function (directory, secretResponse, token) {\n\t\tdirectory.uploadFiles = null;\n\t\tvar url = '/api/parser/parse?secretResponse=' + secretResponse + '&requestToken=' + token;\n\t\treturn fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(directory)\n\t\t});\n\t};\n\n\tparserService.getUploadProgress = function (secretResponse, token, responseFunction) {\n\t\treturn fetch('/api/parser/progress?secretResponse=' + secretResponse + '&requestToken=' + token);\n\t};\n\n\tparserService.saveClasses = function (classObjects) {\n\t\tif (classObjects) {\n\t\t\tlocalStorage.classObjects = JSON.stringify(classObjects);\n\t\t\tparserService.classObjects = classObjects;\n\t\t} else console.log('No classObjects to save...');\n\t};\n\tparserService.getClasses = function () {\n\t\tvar classObjects = localStorage.classObjects ? JSON.parse(localStorage.classObjects) : null;\n\t\treturn classObjects;\n\t};\n\n\tparserService.saveDirectory = function (directory) {\n\t\tif (directory) {\n\t\t\tlocalStorage.directory = JSON.stringify(directory);\n\t\t\tparserService.directory = directory;\n\t\t} else console.log('No directory to save...');\n\t};\n\tparserService.getDirectory = function () {\n\t\tvar directory = localStorage.directory ? JSON.parse(localStorage.directory) : null;\n\t\treturn directory;\n\t};\n\n\treturn parserService;\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 2/28/2016.\r\n */\n\nangular.module('mcnedward').directive('structure', ['$rootScope', function ($rootScope) {\n\t'use strict';\n\n\treturn {\n\t\trestrict: 'E',\n\t\ttransclude: true,\n\t\tscope: {\n\t\t\ttitle: '@',\n\t\t\tcontents: '='\n\t\t},\n\t\tcontroller: function controller($scope, $element, $timeout) {},\n\t\tlink: function link(scope, element, attrs) {},\n\t\ttemplateUrl: 'parser/structure.html'\n\t};\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 11/8/2014.\r\n */\nangular.module('mcnedward').controller('NumberPrinterCtrl', ['$scope', function NumberPrinterCtrl($scope) {\n  'use strict';\n\n  $scope.result = '';\n\n  $scope.convertToEnglish = function () {\n    convert(function (json) {\n      $scope.result = json.englishWord;\n      $scope.$apply();\n    });\n  };\n\n  $scope.convertToRomanNumeral = function () {\n    convert(function (json) {\n      $scope.result = json.romanNumeral;\n      $scope.$apply();\n    });\n  };\n\n  function convert(callback) {\n    clearText();\n    var number = $scope.number;\n    if (number === '') {\n      $scope.errorMessage = 'You need to enter something!';\n      return;\n    }\n    return fetch('/api/number-printer?number=' + number).then(function (response) {\n      if (response.ok) {\n        response.json().then(callback);\n        return;\n      }\n      response.text().then(function (text) {\n        $scope.errorMessage = text;\n        $scope.$apply();\n      });\n    }).catch(function (error) {\n      $scope.errorMessage = error;\n      $scope.$apply();\n    });\n  }\n\n  function clearText() {\n    $scope.result = '';\n    $scope.errorMessage = '';\n  }\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 10/18/2014.\r\n */\nangular.module('mcnedward').factory('modalService', ['$timeout', function ($timeout) {\n\t'use strict';\n\n\tvar modalService = {};\n\tvar overlay, modal, close;\n\n\tfunction removeModal(hasPerspective) {\n\t\tclassie.remove(modal, 'md-show');\n\t}\n\n\tfunction removeModalHandler() {\n\t\tremoveModal();\n\t}\n\n\tmodalService.showModal = function (modalId) {\n\t\tmodal = document.querySelector('#' + modalId);\n\t\tclassie.add(modal, 'md-show');\n\n\t\toverlay = document.querySelector('#overlay-' + modalId);\n\t\toverlay.removeEventListener('click', removeModalHandler);\n\t\toverlay.addEventListener('click', removeModalHandler);\n\n\t\tclose = modal.querySelector('.cancel-btn');\n\t\tclose.addEventListener('click', function (ev) {\n\t\t\tev.stopPropagation();\n\t\t\tremoveModalHandler();\n\t\t});\n\t};\n\tmodalService.closeModal = function () {\n\t\tremoveModalHandler();\n\t};\n\tmodalService.isOpen = function () {\n\t\treturn modal !== undefined;\n\t};\n\n\tfunction showLoading(show) {\n\t\tvar loadingDiv = $('#pageLoader');\n\t\tif (show) {\n\t\t\tloadingDiv.show();\n\t\t} else {\n\t\t\tloadingDiv.hide();\n\t\t}\n\t}\n\n\treturn modalService;\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 10/15/2016.\r\n */\nangular.module('mcnedward').factory('recaptchaService', function () {\n  'use strict';\n\n  var recaptchaService = {};\n\n  recaptchaService.verify = function (secretResponse, successCallback, errorCallback) {\n    if (secretResponse === null) {\n      errorCallback('Sorry, but something went wrong with the reCaptcha. Please refresh the page and try again.');\n      return;\n    }\n    fetch('/api/recaptcha/verify?secretResponse=' + secretResponse, { method: 'POST' }).then(function (response) {\n      var ok = response.ok;\n      response.text().then(function (text) {\n        if (ok) {\n          successCallback(secretResponse, text);\n        } else {\n          errorCallback(text);\n        }\n      });\n    });\n  };\n\n  return recaptchaService;\n});","'use strict';\n\n/**\r\n * Created by Edward on 6/9/2016.\r\n */\nangular.module('mcnedward').factory('userService', [function () {\n\t'use strict';\n\n\tvar userService = {};\n\tvar savedUser = null;\n\n\tuserService.clearCache = function () {\n\t\tlocalStorage.removeItem('user');\n\t\tthis.savedUser = null;\n\t};\n\n\tuserService.isLoggedIn = function () {\n\t\treturn this.getAuthToken() !== null;\n\t};\n\n\tuserService.isAdmin = function () {\n\t\tif (!this.savedUser) this.getUser();\n\t\tif (this.savedUser.userRoles && this.savedUser.userRoles.indexOf('ADMIN') != -1) return true;else return false;\n\t};\n\n\tuserService.save = function (user) {\n\t\tif (user && user.authToken !== '') {\n\t\t\tlocalStorage.user = JSON.stringify(user);\n\t\t\tthis.savedUser = user;\n\t\t} else {\n\t\t\tconsole.log('No user to save.');\n\t\t}\n\t};\n\n\tuserService.update = function () {\n\t\tthis.save(this.getUser());\n\t};\n\n\tuserService.getUser = function () {\n\t\tif (!this.savedUser) {\n\t\t\tthis.savedUser = localStorage.user ? JSON.parse(localStorage.user) : [];\n\t\t}\n\t\treturn this.savedUser;\n\t};\n\n\tuserService.getAuthToken = function () {\n\t\tif (!this.savedUser) this.getUser();\n\t\tif (this.savedUser.authToken && this.savedUser.authToken !== '') {\n\t\t\treturn this.savedUser.authToken;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\treturn userService;\n}]);","'use strict';\n\n/**\r\n * Created by Edward on 2/19/15.\r\n */\nangular.module('mcnedward').directive('buttonoptions', [function () {\n\t'use strict';\n\n\treturn {\n\t\tscope: {\n\t\t\tconfirmAction: '&',\n\t\t\tcancelAction: '&'\n\t\t},\n\t\trestrict: 'AE',\n\t\treplace: 'true',\n\t\tcontroller: function controller($scope) {\n\t\t\t$scope.confirm = function () {\n\t\t\t\t$scope.confirmAction();\n\t\t\t};\n\t\t\t$scope.cancel = function () {\n\t\t\t\t$scope.cancelAction();\n\t\t\t};\n\t\t},\n\t\tlink: function link(scope, element, attrs) {\n\t\t\tscope.title = attrs.confirmTitle;\n\t\t\tscope.cancelTitle = attrs.cancelTitle ? attrs.cancelTitle : 'X';\n\t\t\tif (attrs.confirmClass) scope.confirmClass = attrs.confirmClass;\n\t\t},\n\t\t// template: '<div class=\"button-div\"><span id=\"confirmBtn\" class=\"ebtn ebtn-green confirmBtn\" ng-click=\"confirm()\" ng-class=\"confirmClass\" style=\"width:75%;white-space:nowrap;text-overflow:ellpsis;\">{{title}}</span><span class=\"ebtn ebtn-red cancelBtn\" ng-click=\"cancel()\" style=\"width:25%\">{{cancelTitle}}</span></div>'\n\t\ttemplate: '<div class=\"btn-group\">' + '<button data-ng-click=\"confirm()\" class=\"btn ebtn-green\">{{title}}</button>' + '<button data-ng-click=\"cancel()\" class=\"btn ebtn-red cancelBtn\">{{cancelTitle}}</button></div>'\n\t};\n}]);\napp.directive('ngEnter', function () {\n\treturn function (scope, element, attrs) {\n\t\telement.bind('keydown keypress', function (event) {\n\t\t\tif (event.which === 13) {\n\t\t\t\tscope.$apply(function () {\n\t\t\t\t\tscope.$eval(attrs.ngEnter, { 'event': event });\n\t\t\t\t});\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t});\n\t};\n});"]}